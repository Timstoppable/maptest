<!DOCTYPE html>
<html>
  <head>
    <title>Halloween Festival</title>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <link rel="stylesheet" href="css/leaflet.css">
    <link rel="stylesheet" href="css/L.Control.MousePosition.css">
    <script src="scripts/leaflet.js" type="text/javascript"></script>
    <script src="scripts/L.Control.MousePosition.js" type="text/javascript"></script>

    <style>
      html, body, #map { width:100%; height:100%; margin:0; padding:0; z-index: 1; background: #ffffff; }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script type="text/javascript">
      var mapExtent = [0, -5737, 8192, 0];
      var mapMinZoom = 0;
      var mapMaxZoom = 4;
      var mapMaxResolution = 1.00000000;
      var mapMinResolution = Math.pow(2, mapMaxZoom) * mapMaxResolution;

      // Configure CRS for a pixel-based coordinate system
      var crs = L.CRS.Simple;
      crs.transformation = new L.Transformation(1, 0, -1, 0);
      crs.scale = function(zoom) {
        return Math.pow(2, zoom);
      };
      crs.zoom = function(scale) {
        return Math.log(scale) / Math.LN2;
      };

      var layer;
      var map = new L.Map('map', {
        maxZoom: mapMaxZoom,
        minZoom: mapMinZoom,
        crs: crs
      });

      layer = L.tileLayer('{z}/{x}/{y}.png', {
        minZoom: mapMinZoom,
        maxZoom: mapMaxZoom,
        tileSize: L.point(512, 512),
        noWrap: true,
        tms: false
      }).addTo(map);

      map.fitBounds([
        crs.unproject(L.point(mapExtent[2], mapExtent[3])),
        crs.unproject(L.point(mapExtent[0], mapExtent[1]))
      ]);

      L.control.mousePosition().addTo(map);

      var gateIcon = L.icon({
        iconUrl: 'icons/gateicon.png', // Path to the image
        iconSize: [45, 58], // Size of the icon
        iconAnchor: [22, 58], // Anchor point on the icon
        popupAnchor: [0, -50] // Point from which the popup should open relative to the iconAnchor
      });

      var marker = L.marker([0, 0], { icon: gateIcon }).addTo(map); // Set position for the marker
      marker.bindPopup('Gate Location'); // Optional: add a popup with text

      map.fitBounds([
        crs.unproject(L.point(mapExtent[2], mapExtent[3])),
        crs.unproject(L.point(mapExtent[0], mapExtent[1]))
      ]);

      L.control.mousePosition().addTo(map);
    </script>
  </body>
</html>
